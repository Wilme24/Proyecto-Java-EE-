package com.ubosque.grupo4N.modelo;
// Generated 12/05/2017 11:19:54 AM by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Especialidad generated by hbm2java
 */
@Entity
@Table(name = "especialidad", catalog = "heartscits", uniqueConstraints = @UniqueConstraint(columnNames = "nombreEspecialidad"))
public class Especialidad implements java.io.Serializable {

	private Integer idEspecialidad;
	private String nombreEspecialidad;
	private short estado;
	private Set<Empleado> empleados = new HashSet<Empleado>(0);

	public Especialidad() {
	}

	public Especialidad(String nombreEspecialidad, short estado) {
		this.nombreEspecialidad = nombreEspecialidad;
		this.estado = estado;
	}

	public Especialidad(String nombreEspecialidad, short estado, Set<Empleado> empleados) {
		this.nombreEspecialidad = nombreEspecialidad;
		this.estado = estado;
		this.empleados = empleados;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idEspecialidad", unique = true, nullable = false)
	public Integer getIdEspecialidad() {
		return this.idEspecialidad;
	}

	public void setIdEspecialidad(Integer idEspecialidad) {
		this.idEspecialidad = idEspecialidad;
	}

	@Column(name = "nombreEspecialidad", unique = true, nullable = false, length = 50)
	public String getNombreEspecialidad() {
		return this.nombreEspecialidad;
	}

	public void setNombreEspecialidad(String nombreEspecialidad) {
		this.nombreEspecialidad = nombreEspecialidad;
	}

	@Column(name = "estado", nullable = false)
	public short getEstado() {
		return this.estado;
	}

	public void setEstado(short estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "especialidad")
	public Set<Empleado> getEmpleados() {
		return this.empleados;
	}

	public void setEmpleados(Set<Empleado> empleados) {
		this.empleados = empleados;
	}

}
